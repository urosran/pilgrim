corrplot(newdatacor, method = "number")
df <- readWorksheetFromFile("data.xls",
sheet=1,
startRow = 4,
endCol = 2)
#loading data
dataPilg <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv")
#explore the data
head(dataPilg, n=10)
names(dataPilg)
dataPilg
#visualy explore the data in table format
data(dataPilg)
View(dataPilg)
###split the data###
smp_size <- floor(0.75 * nrow(dataPilg))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(dataPilg)), size = smp_size)
#separate specific sets of data
train <- dataPilg[train_ind, ]
test <- dataPilg[-train_ind, ]
#plot the income and profitability to explore
plot(train[,5], train[,2])
#coorelation plot
library(corrplot)
M<- cor(train)
corrplot(M,method = "ellipse")
#exploring the possibility to regress the discrete variables
train = within(train, {
income1 = ifelse(X9Inc == 1, 1, 0)
income2 = ifelse(X9Inc == 0, 1, 0)
})
View(train)
#tried to regress multiple variables to see the
#intercepts and relevance
fit <- lm(train[2] ~ ., data=train)
head(train)
fit <- lm(formula = `X9Profit` ~ `X9Online`,`X9Inc`, data=train)
summary(fit)
##ploting a matrix of all variables
newData = dataPilg[,c(1:8)]
summary(newData)
plot(newData, pch=16, col="blue", main="Matrix")
set.seed(1)
mod1 = lm(X9Profit~X9Inc + X9Age, data=newData)
summary(mod1)
newdatacor = cor(newData[1:8])
corrplot(newdatacor, method = "number")
library(data.table)
DT <- as.data.table(train)
DT[,which(unlist(lapply(DT, function(x)!all(is.na(x))))),with=F]
corrplot(DT, method="number")
View(DT)
train <- train[,colSums(is.na(df))<nrow(df)]
train <- train[,colSums(is.na(train))<nrow(train)]
View(train)
corrplot(train)
df <- readWorksheetFromFile("data.xls",
sheet=1,
startRow = 4,
endCol = 2)
#loading data
dataPilg <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv")
#explore the data
head(dataPilg, n=10)
names(dataPilg)
dataPilg
#visualy explore the data in table format
data(dataPilg)
View(dataPilg)
###split the data###
smp_size <- floor(0.75 * nrow(dataPilg))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(dataPilg)), size = smp_size)
#separate specific sets of data
train <- dataPilg[train_ind, ]
test <- dataPilg[-train_ind, ]
#plot the income and profitability to explore
plot(train[,5], train[,2])
#coorelation plot
library(corrplot)
M<- cor(train)
corrplot(M,method = "ellipse")
#exploring the possibility to regress the discrete variables
train = within(train, {
income1 = ifelse(X9Inc == 1, 1, 0)
income2 = ifelse(X9Inc == 0, 1, 0)
})
View(train)
#tried to regress multiple variables to see the
#intercepts and relevance
fit <- lm(train[2] ~ ., data=train)
head(train)
fit <- lm(formula = `X9Profit` ~ `X9Online`,`X9Inc`, data=train)
summary(fit)
##ploting a matrix of all variables
newData = dataPilg[,c(1:8)]
summary(newData)
plot(newData, pch=16, col="blue", main="Matrix")
set.seed(1)
mod1 = lm(X9Profit~X9Inc + X9Age, data=newData)
summary(mod1)
newdatacor = cor(newData[1:8])
corrplot(newdatacor, method = "number")
#dropping the N/A values
na.omit(train)
View(train)
train <- as.data.frame(train)
na.omit(train)
View(train)
corrplot(train)
corrplot(cor(train), method="shade",shade.col=NA, tl.col="black", tl.srt=45)
na.omit(train)
corrplot(cor(train), method="shade",shade.col=NA, tl.col="black", tl.srt=45)
View(train)
frameTrain <- as.data.frame(train)
na.omit(frameTrain)
View(frameTrain)
str(frameTrain)
str(train)
importData <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv",
stringsAsFactors=F, na.strings=c(NA,"NA"," NA"))
str(importData)
data <- importData[complete.cases(importData[]),]
str(importData)
data <- importData[complete.cases(importData[,]),]
str(importData)
data <- importData[complete.cases(importData[c("X9Profit","X9Online")]),]
str(data)
data <- importData[complete.cases(importData[c("X9Profit","X9Online","X9Age","X9Tenure")]),]
str(data)
corrplot(data, method="number")
corrplot(cor(data), method="shade",shade.col=NA, tl.col="black", tl.srt=45)
data <- importData[complete.cases(importData[c("X9Profit","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
corrplot(cor(data), method="shade",shade.col=NA, tl.col="black", tl.srt=45)
data <- importData[complete.cases(importData[c("X9Profit","X0Profit","X0Online","X0Billpay","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
corrplot(cor(data), method="shade",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(data), method="ellipse",shade.col=NA, tl.col="black", tl.srt=45)
knitr::opts_chunk$set(echo = TRUE)
---
title: "Pilgrim Data Exploration"
author: "Roopa, Daniel, Anabelle, URos"
date: "September 25, 2017"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
```{r}
df <- readWorksheetFromFile("data.xls",
sheet=1,
startRow = 4,
endCol = 2)
#loading data
dataPilg <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv")
#explore the data
head(dataPilg, n=10)
names(dataPilg)
dataPilg
#visualy explore the data in table format
data(dataPilg)
View(dataPilg)
###split the data###
smp_size <- floor(0.75 * nrow(dataPilg))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(dataPilg)), size = smp_size)
#separate specific sets of data
train <- dataPilg[train_ind, ]
test <- dataPilg[-train_ind, ]
#plot the income and profitability to explore
plot(train[,5], train[,2])
#coorelation plot
library(corrplot)
M<- cor(train)
corrplot(M,method = "ellipse")
#exploring the possibility to regress the discrete variables
train = within(train, {
income1 = ifelse(X9Inc == 1, 1, 0)
income2 = ifelse(X9Inc == 0, 1, 0)
})
View(train)
#tried to regress multiple variables to see the
#intercepts and relevance
fit <- lm(train[2] ~ ., data=train)
head(train)
fit <- lm(formula = `X9Profit` ~ `X9Online`,`X9Inc`, data=train)
summary(fit)
##ploting a matrix of all variables
newData = dataPilg[,c(1:8)]
summary(newData)
plot(newData, pch=16, col="blue", main="Matrix")
set.seed(1)
mod1 = lm(X9Profit~X9Inc + X9Age, data=newData)
summary(mod1)
newdatacor = cor(newData[1:8])
corrplot(newdatacor, method = "number")
#dropping the N/A values
library(data.table)
DT <- as.data.table(train)
DT[,which(unlist(lapply(DT, function(x)!all(is.na(x))))),with=F]
corrplot(data, method="number")
View
##Second approach
train <- train[,colSums(is.na(train))<nrow(train)]
View(train)
na.omit(train)
train <- as.data.frame(train)
frameTrain <- as.data.frame(train)
#removing NA's by reading in differently
importData <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv",
stringsAsFactors=F, na.strings=c(NA,"NA"," NA"))
#viewing data
str(importData)
data <- importData[complete.cases(importData[c("X9Profit","X0Profit","X0Online","X0Billpay","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
#plotting data
corrplot(cor(data), method="ellipse",shade.col=NA, tl.col="black", tl.srt=45)
```
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
fit <- lm(X9Profit ~ X9Age + x9Online + X9illPay, data=mydata)
fit <- lm(X9Profit ~ X9Age + x9Online + X9illPay, data=data)
fit <- lm(X9Profit ~ X9Age + X9Online + X9illPay, data=data)
fit <- lm(X9Profit ~ X9Age + X9Online + X9BillPay, data=data)
fit <- lm(X9Profit ~ X9Age + X9Online + X9BillPay, data=data)
fit <- lm(X9Profit ~ X9Age + X9Online + X9Billpay, data=data)
summary(fit) # show results
fit <- lm(X9Profit ~ X9Age + X9Online + X9Billpay + X9Tenure, data=data)
summary(fit) # show results
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
fit <- lm(X9Profit ~ X9Age + X9Online + X9Billpay + X9Tenure, data=data)
summary(fit) # show results
fit <- lm(X9Profit ~ X9Age + X9Online, data=data)
summary(fit) # show results
fit <- lm(X9Profit ~ X9Age + X9Online + X9Billpay + X9Tenure, data=data)
summary(fit) # show results
fit <- lm(X9Profit ~ X9Age + X9Online, data=data)
summary(fit) # show results
fit <- lm(X9Profit ~ X9Age + X9Online + X9Billpay + X9Tenure, data=data)
summary(fit)
View(data)
str(data)
df <- read.table("C:\Users\Uros Randelovic\Downloads\Aldo\member+fam.txt",
header = TRUE)
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE)
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE)
df
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE, sep = ";")
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE, sep = ";", fill = TRUE)
df
View(df)
View(df)
remove(df)
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE, sep = ";", fill = TRUE)
df <- read.table("C:/Users/Uros Randelovic/Downloads/Aldo/member+fam.txt",
header = TRUE, sep = ";", fill = TRUE, quote = "",
row.names = NULL, stringsAsFactors = FALSE)
View(df)
str(df$FamilyID)
typeof(df$FamilyID)
typeof(df$Livro)
typeof(df$4)
typeof(df[4])
typeof(df$FamÃ.lia)
?destring
??destring
df$FamilyID <- as.numeric(df$FamilyID)
View(df)
typeof(df$FamÃ.lia)
typeof(df$FamilyID)
knitr::opts_chunk$set(echo = TRUE)
tail(dataPilg, n=10)
head(dataPilg, n=10)
names(dataPilg)
data(dataPilg)
newData = dataPilg[,c(1:8)]
summary(newData)
plot(newData, pch=16, col="blue", main="Matrix")
importData <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv",
stringsAsFactors=F, na.strings=c(NA,"NA"," NA"))
str(importData)
data <- importData[complete.cases(importData[c("X9Profit","X0Profit","X0Online","X0Billpay","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
library(corrplot)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
smp_size <- floor(0.75 * nrow(data))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
#separate specific sets of data
train <- data[train_ind, ]
test <- data[-train_ind, ]
corrplot(cor(test), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(train), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot
corrplot
corrplot(cor(train), method="number",shade.col=NA, tl.col="black", tl.srt=45)
train
test
train
test
corrplot(cor(test), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(train), method="number",shade.col=NA, tl.col="black", tl.srt=45)
dataPilg <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv")
#explore the data
head(dataPilg, n=10)
tail(dataPilg, n=10)
names(dataPilg)
head(data, n=10)
tail(data, n=10)
names(data)
str(data)
#visualy explore the data in table format
data(data)
View(data)
#viewing data
str(importData)
#dropping the N/A
data <- importData[complete.cases(importData[c("X9Profit","X0Profit","X0Online","X0Billpay","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
#plotting data
library(corrplot)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
###split the data###
smp_size <- floor(0.75 * nrow(data))
## set the seed to make your partition reproductible
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
#separate specific sets of data
train <- data[train_ind, ]
test <- data[-train_ind, ]
train
test
#plotting test and train
corrplot(cor(test), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(train), method="number",shade.col=NA, tl.col="black", tl.srt=45)
```{r}
names(data)
tail(data, n=10)
head(data, n=10)
str(data)
View(data)
str(data)
data <- read.csv("C:/Users/Uros Randelovic/Documents/R workspace/BUS 111/data.csv",
stringsAsFactors=F, na.strings=c(NA,"NA"," NA"))
head(data, n=10)
tail(data, n=10)
str(data)
data <- data[complete.cases(importData[c("X9Profit","X0Profit","X0Online","X0Billpay","X9Inc","X9Online","X9Age","X9Tenure")]),]
str(data)
corrplot(cor(data), method="number",shade.col=NA, tl.col="black", tl.srt=45)
head(train)
head(test)
corrplot(cor(test), method="number",shade.col=NA, tl.col="black", tl.srt=45)
corrplot(cor(train), method="number",shade.col=NA, tl.col="black", tl.srt=45)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(error = TRUE)
boxplot(train$X9Profit~X9Age,data=train, main="Profits 2009",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(train$X9Profit~X9Age,data=train, main="Profits 2009",
xlab="Number of Cylinders", ylab="Age group")
boxplot(train$X9Profit~X9Age,data=train, main="Profits 2009",
xlab="Age Group", ylab="Profits")
